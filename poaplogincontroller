// It checks that a user holds a specific POAP. Enter the POAP name in the final returnValueTest value. In this example the POAP is "Burning Man 2021".
// This actually performs two checks, so there are two access control conditions tested. The first checks that the name of any of the user's POAPs is a match to the returnValueTest value and uses the xDai chain. The second does the same but with ethereum. Since POAPs live on both xDai and Ethereum chains both need to be checked, separated by an 'or' operator. Both conditions should be identical other than the chain.

var accessControlConditions = [
  {
    contractAddress: "0x22C1f6050E56d2876009903609a2cC3fEf83B415",
    standardContractType: "POAP",
    chain: "xdai",
    method: "tokenURI",
    parameters: [],
    returnValueTest: {
      comparator: "contains",
      value: "Burning Man 2021",
    },
  },
  {"operator": "or"},
  {
    contractAddress: "0x22C1f6050E56d2876009903609a2cC3fEf83B415",
    standardContractType: "POAP",
    chain: "ethereum",
    method: "tokenURI",
    parameters: [],
    returnValueTest: {
      comparator: "contains",
      value: "Burning Man 2021",
    },
  },
];
